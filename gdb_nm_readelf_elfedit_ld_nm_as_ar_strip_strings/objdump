$ arm-none-eabi-objdump -x stupid.program

stupid.program:     file format elf32-little
stupid.program
architecture: UNKNOWN!, flags 0x00000150:
HAS_SYMS, DYNAMIC, D_PAGED
start address 0x00001070

Program Header:
    PHDR off    0x00000034 vaddr 0x00000034 paddr 0x00000034 align 2**2
         filesz 0x00000160 memsz 0x00000160 flags r--
  INTERP off    0x00000194 vaddr 0x00000194 paddr 0x00000194 align 2**0
         filesz 0x00000013 memsz 0x00000013 flags r--
    LOAD off    0x00000000 vaddr 0x00000000 paddr 0x00000000 align 2**12
         filesz 0x000003fc memsz 0x000003fc flags r--
    LOAD off    0x00001000 vaddr 0x00001000 paddr 0x00001000 align 2**12
         filesz 0x00000298 memsz 0x00000298 flags r-x
    LOAD off    0x00002000 vaddr 0x00002000 paddr 0x00002000 align 2**12
         filesz 0x00000160 memsz 0x00000160 flags r--
    LOAD off    0x00002ef4 vaddr 0x00003ef4 paddr 0x00003ef4 align 2**12
         filesz 0x0000012c memsz 0x00000130 flags rw-
 DYNAMIC off    0x00002efc vaddr 0x00003efc paddr 0x00003efc align 2**2
         filesz 0x000000f0 memsz 0x000000f0 flags rw-
    NOTE off    0x000001a8 vaddr 0x000001a8 paddr 0x000001a8 align 2**2
         filesz 0x00000044 memsz 0x00000044 flags r--
EH_FRAME off    0x00002020 vaddr 0x00002020 paddr 0x00002020 align 2**2
         filesz 0x0000003c memsz 0x0000003c flags r--
   STACK off    0x00000000 vaddr 0x00000000 paddr 0x00000000 align 2**4
         filesz 0x00000000 memsz 0x00000000 flags rw-
   RELRO off    0x00002ef4 vaddr 0x00003ef4 paddr 0x00003ef4 align 2**0
         filesz 0x0000010c memsz 0x0000010c flags r--

Dynamic Section:
  NEEDED               libc.so.6
  INIT                 0x00001000
  FINI                 0x00001284
  INIT_ARRAY           0x00003ef4
  INIT_ARRAYSZ         0x00000004
  FINI_ARRAY           0x00003ef8
  FINI_ARRAYSZ         0x00000004
  GNU_HASH             0x000001ec
  STRTAB               0x0000029c
  SYMTAB               0x0000020c
  STRSZ                0x000000b6
  SYMENT               0x00000010
  DEBUG                0x00000000
  PLTGOT               0x00004000
  PLTRELSZ             0x00000018
  PLTREL               0x00000011
  JMPREL               0x000003e4
  REL                  0x000003a4
  RELSZ                0x00000040
  RELENT               0x00000008
  FLAGS_1              0x08000000
  VERNEED              0x00000364
  VERNEEDNUM           0x00000001
  VERSYM               0x00000352
  RELCOUNT             0x00000004

Version References:
  required from libc.so.6:
    0x0d696910 0x00 04 GLIBC_2.0
    0x09691f73 0x00 03 GLIBC_2.1.3
    0x0d696914 0x00 02 GLIBC_2.4

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .interp       00000013  00000194  00000194  00000194  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .note.gnu.build-id 00000024  000001a8  000001a8  000001a8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  2 .note.ABI-tag 00000020  000001cc  000001cc  000001cc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .gnu.hash     00000020  000001ec  000001ec  000001ec  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .dynsym       00000090  0000020c  0000020c  0000020c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .dynstr       000000b6  0000029c  0000029c  0000029c  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  6 .gnu.version  00000012  00000352  00000352  00000352  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .gnu.version_r 00000040  00000364  00000364  00000364  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .rel.dyn      00000040  000003a4  000003a4  000003a4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  9 .rel.plt      00000018  000003e4  000003e4  000003e4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 10 .init         00000020  00001000  00001000  00001000  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 11 .plt          00000040  00001020  00001020  00001020  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 12 .plt.got      00000008  00001060  00001060  00001060  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 13 .text         00000211  00001070  00001070  00001070  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 14 .fini         00000014  00001284  00001284  00001284  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 15 .rodata       0000001d  00002000  00002000  00002000  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 16 .eh_frame_hdr 0000003c  00002020  00002020  00002020  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 17 .eh_frame     00000104  0000205c  0000205c  0000205c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 18 .init_array   00000004  00003ef4  00003ef4  00002ef4  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 19 .fini_array   00000004  00003ef8  00003ef8  00002ef8  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 20 .dynamic      000000f0  00003efc  00003efc  00002efc  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 21 .got          00000014  00003fec  00003fec  00002fec  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 22 .got.plt      00000018  00004000  00004000  00003000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 23 .data         00000008  00004018  00004018  00003018  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 24 .bss          00000004  00004020  00004020  00003020  2**0
                  ALLOC
 25 .comment      00000022  00000000  00000000  00003020  2**0
                  CONTENTS, READONLY
 26 .debug_aranges 00000090  00000000  00000000  00003048  2**3
                  CONTENTS, READONLY, DEBUGGING
 27 .debug_info   000000a6  00000000  00000000  000030d8  2**0
                  CONTENTS, READONLY, DEBUGGING
 28 .debug_abbrev 0000006d  00000000  00000000  0000317e  2**0
                  CONTENTS, READONLY, DEBUGGING
 29 .debug_line   0000014c  00000000  00000000  000031eb  2**0
                  CONTENTS, READONLY, DEBUGGING
 30 .debug_str    0000016a  00000000  00000000  00003337  2**0
                  CONTENTS, READONLY, DEBUGGING
 31 .debug_ranges 00000048  00000000  00000000  000034a8  2**3
                  CONTENTS, READONLY, DEBUGGING
SYMBOL TABLE:
00000194 l    d  .interp        00000000              .interp
000001a8 l    d  .note.gnu.build-id     00000000              .note.gnu.build-id
000001cc l    d  .note.ABI-tag  00000000              .note.ABI-tag
000001ec l    d  .gnu.hash      00000000              .gnu.hash
0000020c l    d  .dynsym        00000000              .dynsym
0000029c l    d  .dynstr        00000000              .dynstr
00000352 l    d  .gnu.version   00000000              .gnu.version
00000364 l    d  .gnu.version_r 00000000              .gnu.version_r
000003a4 l    d  .rel.dyn       00000000              .rel.dyn
000003e4 l    d  .rel.plt       00000000              .rel.plt
00001000 l    d  .init  00000000              .init
00001020 l    d  .plt   00000000              .plt
00001060 l    d  .plt.got       00000000              .plt.got
00001070 l    d  .text  00000000              .text
00001284 l    d  .fini  00000000              .fini
00002000 l    d  .rodata        00000000              .rodata
00002020 l    d  .eh_frame_hdr  00000000              .eh_frame_hdr
0000205c l    d  .eh_frame      00000000              .eh_frame
00003ef4 l    d  .init_array    00000000              .init_array
00003ef8 l    d  .fini_array    00000000              .fini_array
00003efc l    d  .dynamic       00000000              .dynamic
00003fec l    d  .got   00000000              .got
00004000 l    d  .got.plt       00000000              .got.plt
00004018 l    d  .data  00000000              .data
00004020 l    d  .bss   00000000              .bss
00000000 l    d  .comment       00000000              .comment
00000000 l    d  .debug_aranges 00000000              .debug_aranges
00000000 l    d  .debug_info    00000000              .debug_info
00000000 l    d  .debug_abbrev  00000000              .debug_abbrev
00000000 l    d  .debug_line    00000000              .debug_line
00000000 l    d  .debug_str     00000000              .debug_str
00000000 l    d  .debug_ranges  00000000              .debug_ranges
00000000 l    df *ABS*  00000000              init.c
00000000 l    df *ABS*  00000000              crtstuff.c
000010c0 l     F .text  00000000              deregister_tm_clones
00001100 l     F .text  00000000              register_tm_clones
00001150 l     F .text  00000000              __do_global_dtors_aux
00004020 l     O .bss   00000001              completed.6941
00003ef8 l     O .fini_array    00000000              __do_global_dtors_aux_fini_array_entry
000011a0 l     F .text  00000000              frame_dummy
00003ef4 l     O .init_array    00000000              __frame_dummy_init_array_entry
00000000 l    df *ABS*  00000000              stupid.c
00000000 l    df *ABS*  00000000              crtstuff.c
0000215c l     O .eh_frame      00000000              __FRAME_END__
00000000 l    df *ABS*  00000000
00003ef8 l       .init_array    00000000              __init_array_end
00003efc l     O .dynamic       00000000              _DYNAMIC
00003ef4 l       .init_array    00000000              __init_array_start
00002020 l       .eh_frame_hdr  00000000              __GNU_EH_FRAME_HDR
00004000 l     O .got.plt       00000000              _GLOBAL_OFFSET_TABLE_
00001000 l     F .init  00000000              _init
00001280 g     F .text  00000001              __libc_csu_fini
00000000  w      *UND*  00000000              _ITM_deregisterTMCloneTable
000010b0 g     F .text  00000004              .hidden __x86.get_pc_thunk.bx
00004018  w      .data  00000000              data_start
00004020 g       .data  00000000              _edata
00001284 g     F .fini  00000000              .hidden _fini
00000000       F *UND*  00000000              __stack_chk_fail@@GLIBC_2.4
000011a5 g     F .text  00000000              .hidden __x86.get_pc_thunk.dx
00000000  w    F *UND*  00000000              __cxa_finalize@@GLIBC_2.1.3
00004018 g       .data  00000000              __data_start
00000000       F *UND*  00000000              puts@@GLIBC_2.0
00000000  w      *UND*  00000000              __gmon_start__
0000401c g     O .data  00000000              .hidden __dso_handle
00002004 g     O .rodata        00000004              _IO_stdin_used
00000000       F *UND*  00000000              __libc_start_main@@GLIBC_2.0
00001210 g     F .text  00000065              __libc_csu_init
00004024 g       .bss   00000000              _end
00001070 g     F .text  00000036              _start
00002000 g     O .rodata        00000004              _fp_hw
00004020 g       .bss   00000000              __bss_start
000011a9 g     F .text  0000005a              main
00004020 g     O .data  00000000              .hidden __TMC_END__
00000000  w      *UND*  00000000              _ITM_registerTMCloneTable













$ arm-none-eabi-objdump -dwarf stupid.program

stupid.program:     file format srec
stupid.program
architecture: UNKNOWN!, flags 0x00000000:

start address 0x00001070

arm-none-eabi-objdump: can't disassemble for architecture UNKNOWN!













$ arm-linux-musleabi-objdump -D stupid.program

stupid.program:     file format srec

arm-linux-musleabi-objdump: can't disassemble for architecture UNKNOWN!













$ arm-linux-musleabi-objdump -D a.out

a.out:     file format elf32-little

arm-linux-musleabi-objdump: can't disassemble for architecture UNKNOWN!


